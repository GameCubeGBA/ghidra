/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public final class InputReaderAction {
  public static final InputReaderAction eInputReaderActivate = new InputReaderAction("eInputReaderActivate");
  public static final InputReaderAction eInputReaderAsynchronousOutputWritten = new InputReaderAction("eInputReaderAsynchronousOutputWritten");
  public static final InputReaderAction eInputReaderReactivate = new InputReaderAction("eInputReaderReactivate");
  public static final InputReaderAction eInputReaderDeactivate = new InputReaderAction("eInputReaderDeactivate");
  public static final InputReaderAction eInputReaderGotToken = new InputReaderAction("eInputReaderGotToken");
  public static final InputReaderAction eInputReaderInterrupt = new InputReaderAction("eInputReaderInterrupt");
  public static final InputReaderAction eInputReaderEndOfFile = new InputReaderAction("eInputReaderEndOfFile");
  public static final InputReaderAction eInputReaderDone = new InputReaderAction("eInputReaderDone");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static InputReaderAction swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
      for (InputReaderAction value : swigValues)
          if (value.swigValue == swigValue)
              return value;
    throw new IllegalArgumentException("No enum " + InputReaderAction.class + " with value " + swigValue);
  }

  private InputReaderAction(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private InputReaderAction(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private InputReaderAction(String swigName, InputReaderAction swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static InputReaderAction[] swigValues = { eInputReaderActivate, eInputReaderAsynchronousOutputWritten, eInputReaderReactivate, eInputReaderDeactivate, eInputReaderGotToken, eInputReaderInterrupt, eInputReaderEndOfFile, eInputReaderDone };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

