/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public final class ValueType {
  public static final ValueType eValueTypeInvalid = new ValueType("eValueTypeInvalid", lldbJNI.eValueTypeInvalid_get());
  public static final ValueType eValueTypeVariableGlobal = new ValueType("eValueTypeVariableGlobal", lldbJNI.eValueTypeVariableGlobal_get());
  public static final ValueType eValueTypeVariableStatic = new ValueType("eValueTypeVariableStatic", lldbJNI.eValueTypeVariableStatic_get());
  public static final ValueType eValueTypeVariableArgument = new ValueType("eValueTypeVariableArgument", lldbJNI.eValueTypeVariableArgument_get());
  public static final ValueType eValueTypeVariableLocal = new ValueType("eValueTypeVariableLocal", lldbJNI.eValueTypeVariableLocal_get());
  public static final ValueType eValueTypeRegister = new ValueType("eValueTypeRegister", lldbJNI.eValueTypeRegister_get());
  public static final ValueType eValueTypeRegisterSet = new ValueType("eValueTypeRegisterSet", lldbJNI.eValueTypeRegisterSet_get());
  public static final ValueType eValueTypeConstResult = new ValueType("eValueTypeConstResult", lldbJNI.eValueTypeConstResult_get());
  public static final ValueType eValueTypeVariableThreadLocal = new ValueType("eValueTypeVariableThreadLocal", lldbJNI.eValueTypeVariableThreadLocal_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static ValueType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
      for (ValueType value : swigValues)
          if (value.swigValue == swigValue)
              return value;
    throw new IllegalArgumentException("No enum " + ValueType.class + " with value " + swigValue);
  }

  private ValueType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private ValueType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private ValueType(String swigName, ValueType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static ValueType[] swigValues = { eValueTypeInvalid, eValueTypeVariableGlobal, eValueTypeVariableStatic, eValueTypeVariableArgument, eValueTypeVariableLocal, eValueTypeRegister, eValueTypeRegisterSet, eValueTypeConstResult, eValueTypeVariableThreadLocal };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

